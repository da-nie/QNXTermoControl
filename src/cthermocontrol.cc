#include "cthermocontrol.h"

//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
//-Конструктор класса---------------------------------------------------------------------------------
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
CThermoControl::CThermoControl(void)
{
 CurrentTemp=0;
 EnabledCurrentTempCounter=0;
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
//-Деструктор класса----------------------------------------------------------------------------------
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
CThermoControl::~CThermoControl()
{
}

//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
//закрытые функции класса
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
//открытые функции класса
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

//----------------------------------------------------------------------------------------------------
//установить данные
//----------------------------------------------------------------------------------------------------
void CThermoControl::SetData(unsigned char *data,unsigned char length)
{
 if (length!=8) return;
 char tmp[2]={data[3],data[2]};
 short read_t=*(reinterpret_cast<short*>(tmp));
 CurrentTemp=(read_t*125.0f)/32000.0f; 
 printf("Current Temp=%.03f\r\n",CurrentTemp);
 EnabledCurrentTempCounter=MAX_LOST_DATA_VALUE;
}
//----------------------------------------------------------------------------------------------------
//получить текущую температуру
//----------------------------------------------------------------------------------------------------
bool CThermoControl::GetCurrentTemp(float &temp)
{
 if (EnabledCurrentTempCounter==0) return(false);
 temp=CurrentTemp;
 return(true);	
}
//----------------------------------------------------------------------------------------------------
//указать, что данные не пришли
//----------------------------------------------------------------------------------------------------
void CThermoControl::NoData(void)
{
 if (EnabledCurrentTempCounter>0) EnabledCurrentTempCounter--;
}
//-Прочее--------------------------------------------------------------------

